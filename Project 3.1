%% TASK 1
clc;
clear all;
load('LOS_8_8.mat');
N_real = 401; % Nr of real

Es = 1;
SNR = 0:12;

MIMO_Re = 2;
MIMO_Tr = 2;
nr_bits = 1000;
bits = 2*randi([0 1], 1,nr_bits)-1; % sent bits


for i = 1:N_real
    MIMO_H = H(1:MIMO_Re,1:MIMO_Tr,1:N_real);
    SISO_H = H(1:1,1:1,1:N_real);

end

for i = 1:length(SNR) 
    
    %SISO case
    for g = 1:N_real
        y(g,:) = sqrt(Es)*SISO_H(:,:,g)*bits; % Y = sqrt(ES)*H*S + N
          
%         STOLEN %%%%% 

          E_rt = sum(y(g,:).^2)/nr_bits;
          N0 = E_rt/(10^(SNR(i)/10));
%         %%%%%

          n = randn(size(y(g,:))).*sqrt(N0/2);
          y(g,:) = y(g,:) + n;
          
        z(g,:) = SISO_H(:,:,g)'*y(g,:);% Z =h^H*y    
        y_z_bits(g,:) = demod_BPSK(z(g,:));
        bitErrors(g) = BER(bits,y_z_bits(g,:));
    end 
       SISO_BER(i) = mean(bitErrors)/nr_bits;    
    
end

for i = 1:length(SNR) 
 % MIMO case     
 sPairs = reshape(bits,2,[]); 
    for g = 1:N_real
        Heff(:,:,g) = ones(MIMO_Re*2,MIMO_Tr);
        Heff(1:2,1:2,g) = MIMO_H(:,:,g);
        Heff(3:4,:,g) = [conj(MIMO_H(1,2)), -conj(MIMO_H(1,1)),; conj(MIMO_H(2,2)), -conj(MIMO_H(2,1))];
        y = sqrt(Es/2)*Heff(:,:,g)*sPairs; % Y = sqrt(ES)*H*S + N
        
        
        %%%% STOLEN!!!!!
        E_rt = sum(y.^2,'all')/nr_bits;     
        N0 = E_rt/(10^(SNR(i)/10));
        % ADDED WRONG: should be n = [n1 n2 n3* n4*]
        %%%%%
        
        
        n = randn(size(y)).*sqrt(N0/2);
        y = y + n;  
        y_z = Heff(:,:,g)'*y; % Z =h^H*y
        y_z_demod = demod_BPSK(y_z(:));
        bitErrors(g) = BER(bits,y_z_demod);

   
    end
           MIMO_BER(i) = mean(bitErrors)/nr_bits;

end

figure;
hold on
plot(SNR,SISO_BER,'-*');
plot(SNR,MIMO_BER,'-x');
xlabel('SNR')
ylabel('BER')
legend('SISO BER', 'MIMO BER');

%% TASK 2

clc;
clear all;
load('LOS_8_8.mat');
N_real = 401; % Nr of real

Es = 1;
SNR = 0:12;

MIMO_Re = 2;
MIMO_Tr = 2;
nr_bits = 1000;
bits = 2*randi([0 1], 1,nr_bits)-1; % sent bits


for i = 1:N_real
    MIMO_H = H(1:MIMO_Re,1:MIMO_Tr,1:N_real);

end


for i = 1:length(SNR)
    
    for g = 1:N_real
        
        [U,S,V] = svd(MIMO_H(:,:,g));
        sMax = S(1,1);
        y_z(g,:) = sqrt(Es)*sMax*bits;
        
        %STOLEN %%%%%
        E_rt = sum(y_z(g,:).^2)/nr_bits;
        N0 = E_rt/(10^(SNR(i)/10));
        %%%%
        
        n = randn(size(y_z(g,:))).*sqrt(N0/2);
        y_z(g,:) =  y_z(g,:) + n;
        
        y_z_bits(g,:) = demod_BPSK(y_z(g,:));
        channel_known_BER(g) = BER(bits,y_z_bits(g,:));
        
    end
    Known_Channel_BER(i) = mean(channel_known_BER)/nr_bits;

end

figure;
hold on
plot(SNR,Known_Channel_BER,'-*');
xlabel('SNR')
ylabel('BER')
legend('Known Channel');
